<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
fCount = 18;
counter = 1;

global.main_surface = -1; 

global.gui_width = 960; 
global.gui_height = 540;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resize the screen
if((global.gui_width != window_get_width() or global.gui_height != window_get_height() or counter&lt;1)
   and window_has_focus() and window_get_width()&gt;50 and window_get_height()&gt;50){
   
    if(window_get_width() &lt; 960) window_set_size(960,window_get_height()); 
    if(window_get_height() &lt; 540) window_set_size(window_get_width(),540); 
   
    view_wport[0] = window_get_width();
    view_hport[0] = window_get_height();

    view_wview[0] = window_get_width();
    view_hview[0] = window_get_height();

    surface_resize(application_surface,window_get_width(),window_get_height());
    display_set_gui_size(window_get_width(),window_get_height());
    
    global.gui_width = window_get_width();
    global.gui_height = window_get_height();
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw text

draw_set_font(font0); 
draw_set_halign(fa_left);
draw_set_valign(fa_top); 
draw_set_color(c_white); 
draw_set_alpha(1); 
draw_text(10,10,"up/down arrow keys to adjust line count#" + string(fps) + "/60#fragment count: " + string(fCount));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>counter++;
    if(keyboard_check_pressed(vk_up)) fCount++;
    if(keyboard_check_pressed(vk_down)) fCount--;
    
    var vRes = shader_get_uniform(shader0,"vRes");
    var vTime = shader_get_uniform(shader0,"vTime");
    var vMouse = shader_get_uniform(shader0,"vMouse");
    var fcount = shader_get_uniform(shader0,"fCount");
    shader_set(shader0);
    shader_set_uniform_f(vRes,room_width,room_height);
    shader_set_uniform_f(vTime,counter);
    shader_set_uniform_f(vMouse,0,0,0,0);
    shader_set_uniform_i(fcount,fCount);
    draw_sprite_stretched(sprite_index,0,0,0,global.gui_width,global.gui_height);
    shader_reset(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>480,480</point>
  </PhysicsShapePoints>
</object>
